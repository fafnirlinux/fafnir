ver=6.3.1

[deps]
ffmpeg
icu
libevent
libva
libvpx
libwebp
minizip
nodejs
nss
pciutils
python3-html5lib
python3-six
qt6-location
qt6-tools
qt6-webchannel
re2
snappy
xorg-libxcomposite
xorg-libxcursor
xorg-libxkbfile

[srcs]
https://download.qt.io/official_releases/qt/6.3/%ver/submodules/qtwebengine-everywhere-src-%ver.tar.xz

[build]
prt-get isinst ninja && PKGMK_QT6+=' -G Ninja'
prt-get isinst krb5 && PKGMK_QT6+=' -D QT_FEATURE_webengine_kerberos=ON'
prt-get isinst pipewire && PKGMK_QT6+=' -D QT_FEATURE_webengine_webrtc_pipewire=ON'
prt-get isinst ccache && echo "${PATH}" | grep '/usr/lib/ccache' && \
PKGMK_QT6+=' -D QT_USE_CCACHE=ON' && PATH="$(echo ${PATH} | awk -v RS=: -v ORS=: '/ccache/ {next} {print}' | sed 's/:*$//')"
prt-get isinst sccache && echo "${PATH}" | grep --invert-match '/usr/lib/ccache' && \
PKGMK_QT6+=' -D CMAKE_C_COMPILER_LAUNCHER=sccache -D CMAKE_CXX_COMPILER_LAUNCHER=sccache'
PYTHON=/bin/python3 \
cmake -S qtwebengine-everywhere-src-%ver -B build %destMK_QT6 \
	 -D CMAKE_BUILD_TYPE=Release \
	 -D CMAKE_CXX_FLAGS_RELEASE="$CXXFLAGS" \
	 -D CMAKE_C_FLAGS_RELEASE="$CFLAGS" \
	 -D CMAKE_TOOLCHAIN_FILE=/lib/cmake/Qt6/qt.toolchain.cmake \
	 -D QT_FEATURE_webengine_system_ffmpeg=ON \
	 -D QT_FEATURE_webengine_system_icu=ON \
	 -D QT_FEATURE_webengine_system_libevent=ON \
	 -D QT_FEATURE_webengine_proprietary_codecs=ON \
	 -Wno-dev
cmake --build build
DESTDIR=%dest cmake --install build
